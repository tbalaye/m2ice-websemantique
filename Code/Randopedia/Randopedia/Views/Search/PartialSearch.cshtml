<div id="search-stats">
    @if (ViewBag.Result != null && ViewBag.IsSearch)
    {
        if (ViewBag.Result.Results.Length > 0)
        {
            <p>@ViewBag.Result.Results.Length résultats (@ViewBag.Result.TimeCompute secondes)</p>
        }
        else if (ViewBag.Result.Results.Length == 1)
        {
            <p>1 résultat (@ViewBag.Result.TimeCompute secondes)</p>
        }
        else
        {
            <p>Aucun résultat (@ViewBag.Result.TimeCompute secondes)</p>
        }
    }
</div>

<div id="result-stats">
    @if (ViewBag.Result != null && ViewBag.IsSearch)
    {
        if (ViewBag.Result.NameQrel != "")
        {
            <b>Qrel trouvée : </b>@ViewBag.Result.NameQrel<br />
        }
        if (ViewBag.Result.Rappel >= 0)
        {
            <b>Rappel : </b>@((ViewBag.Result.Rappel * 100).ToString("0.00") + " %")<br />
        } else {
            <b>Pas de qrel associée</b>   
        }
        if (ViewBag.Result.Precision >= 0)
        {
            <b>Precision : </b>@((ViewBag.Result.Precision * 100).ToString("0.00") + " %")<br />
        }
    } 
    else if (ViewBag.Result == null) 
    {
        <b style="color: red">@ViewBag.Error : </b><br />
        <div class="highlighted-content"><a href="@ViewBag.SearchServer" target="_blank">@ViewBag.SearchServer</a></div>
    } 
    else 
    {
        <b>Saisissez votre recherche ci-dessus</b>
    }
</div>
@using System.Text.RegularExpressions
@functions {
    public String format(String[] terms, String content, String cssProperties) {
        string regexTerm = "((?<=[\\s|\\.|\\,|!|?|\\-|'|:|;])|^)(";
        regexTerm += terms[0].Substring(0, Math.Min(terms[0].Length, 6)) + "[a-z]*";
        foreach (String term in terms)
        {
            regexTerm += "|" + term.Substring(0, Math.Min(term.Length, 6)) + "[a-zâãäåæçèéêëìíîïðñòóôõøùúûüýþÿı]*";
        }
        regexTerm += ")((?=[\\s|\\.|\\,|!|?|\\-|:|;])|$)";
        Regex regex = new Regex(regexTerm, RegexOptions.IgnoreCase);
        foreach (Match match in regex.Matches(content))
        {
            content = Regex.Replace(content, "((?<=[\\s|\\.|\\,|!|?|\\-|'|:|;])|^)(" + match.Value + ")((?=[\\s|\\.|\\,|!|?|\\-|:|;])|$)", "<span class=\"" + cssProperties + "\">" + match.Value + "</span>");
        }
        return content;
    }
}
<div class="result-list">
    @if (ViewBag.Result != null)
    {
        foreach (Randopedia.JSONObjects.ResultLine result in ViewBag.Result.Results)
        {
            String[] terms = ViewBag.Result.TermSimple;
            if (terms.Length > 0)
            {
                result.Content = format(terms, result.Content, "result-item-highlight");
            }
            terms = ViewBag.Result.TermSynonymes;
            if (terms.Length > 0)
            {
                result.Content = format(terms, result.Content, "result-item-highlight-synonym");
            }
            terms = ViewBag.Result.TermChildren;
            if (terms.Length > 0)
            {
                result.Content = format(terms, result.Content, "result-item-highlight-children");
            }
            terms = ViewBag.Result.TermInstances;
            if (terms.Length > 0)
            {
                result.Content = format(terms, result.Content, "result-item-highlight-instances");
            }
            
            <div class="result-item">
                @if (ViewBag.DetailedSearch) 
                {
                    <p>
                        <span class="result-item-file-path">@result.pathFile.Replace("../","")</span>
                        <span class="result-item-xpath">@result.Xpath</span>
                        <span class="result-item-weight">@result.weight.ToString("F2")</span>
                        @if (result.found)
                        {
                            <span class="result-item-found">Dans la qrel</span>
                        }
                    </p>
                }
                <p>@Html.Raw(result.Content)</p>
            </div>
        }
    }
</div>

